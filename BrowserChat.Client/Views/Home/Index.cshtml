@model IEnumerable<BrowserChat.Entity.DTO.RoomReadDTO>

@{
    ViewData["Title"] = "Home";
}

<style>
    .active-room
    {
        background-color: #f1ebeb;
    }
</style>

<div class="col-12" style="height: 100%">
    <div style="display: flex">
        <div class="col-3" style="padding: 10px;">
            <span style="font-size: 1.5rem;">Rooms</span>
            <ul class="list-group">
                @foreach (var item in Model)
                {
                    <li class="list-group-item" room-id="@item.Id">
                        <a class="link-primary" onclick="chatManager.AddTab('@item.Id', '@item.Name')">@item.Name</a>
                    </li>
                }
            </ul>
        </div>
        <div class="col-9" style="display: flex; flex-direction: column; padding: 10px;">
            <div class="col-12">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                </ul>
            </div>
            <div class="col-12">
                <div class="tab-content" id="myTabcontainer">
                </div>
            </div>
        </div>
    </div>
</div>

<div style="display: none;">
    <div id="tab_item_li">
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="tab_item_li_id" data-bs-toggle="tab" 
                data-bs-target="" type="button" role="tab" aria-selected="true" 
                room-id="" onclick="chatManager.FocusTab($(this).attr('room-id'))">
                <span class="tab-name"></span>
                <span class="dismiss" style="padding-left: 5px;">
                    <a style="color: red; font-weight: bold; font-size: 16px;" onclick="chatManager.CloseTab(this);">x</a>
                </span>
            </button>
         </li>
    </div>

    <div id="tab_item_div">
        <div class="tab-pane" id="tab_item_div_id" room-id="" role="tabpanel">
            <div class="col-12" style="height: 500px;">
                <div class="col-12 messages" style="height: 100%; overflow-y: scroll; padding: 20px;"></div>
                <div class="col-12" style="display: flex;">
                    <div class="col-11">
                        <textarea class="message-area form-control form-control-lg" style="width: 100%;"></textarea>
                    </div>
                    <div class="col-1">
                        <button class="btn btn-primary" 
                            onclick="chatManager.SendPost($(this).closest('.tab-pane').attr('room-id'))"
                            style="width: 100%;">
                            Send
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib//microsoft/signalr/dist/browser/signalr.min.js"></script>

<script type="text/javascript">
    var chatManager = {
        tabarray: [],
        connection: null,
        AddTab: function(roomid, roomname) {
            if (!this.tabarray.includes(roomid)) {
                chatManager.SelectRoom(roomid, true);

                let newTabId = new Date().getTime();

                let tabLi = $('#tab_item_li').clone();
                tabLi.attr('id', '');
                tabLi.find('button').attr('id', `room${newTabId}-tab`);
                tabLi.find('button').attr('room-id', roomid);
                tabLi.find('button').find('.tab-name').text(roomname);
                tabLi.find('button').attr('data-bs-target', `#room${newTabId}`);

                let tabDiv = $('#tab_item_div').clone();
                tabDiv.attr('id', '');
                tabDiv.find('.tab-pane').attr('id', `room${newTabId}`);
                tabDiv.find('.tab-pane').attr('room-id', roomid);

                $('#myTab').append(tabLi.html());
                $('#myTabcontainer').append(tabDiv.html());

                this.tabarray.push(roomid);
                chatManager.FocusTab(roomid);

                chatManager.GetRecentPosts(roomid);
                chatManager.ConnectRoom(roomid);
            }
            else {
                chatManager.FocusTab(roomid);
            }
        },
        SelectRoom: function(roomid, flag) {
            if (flag) {
                $(`li.list-group-item[room-id="${roomid}"]`).addClass("active-room");
            }
            else {
                $(`li.list-group-item[room-id="${roomid}"]`).removeClass("active-room");
            }
        },
        FocusTab: function(roomid) {
            if (this.tabarray.includes(roomid)) {
                $(`button.nav-link`).removeClass('active');
                $(`button.nav-link[room-id="${roomid}"]`).addClass('active');

                $(`div.tab-pane`).removeClass('active');
                $(`div.tab-pane`).removeClass('show');
                $(`div.tab-pane[room-id="${roomid}"]`).addClass('active show');
            }
        },
        CloseTab: function(control) {
            let liButton = $(control).closest('.nav-link');
            let roomId = liButton.attr('room-id');

            liButton.closest('.nav-item').remove();
            $(`div.tab-pane[room-id="${roomId}"]`).remove();

            chatManager.SelectRoom(roomId, false);
            chatManager.DisconnectRoom(roomId);

            chatManager.tabarray = chatManager.tabarray.filter(tab => tab != roomId);
            if (!$('.nav-link.active').length) {
                let newRoomId = chatManager.tabarray[chatManager.tabarray.length - 1];
                chatManager.FocusTab(newRoomId);
            }
        },
        GetRecentPosts: function(roomid) {
            $.ajax({
                url: "/Home/GetRecentPosts",
                data: { room: roomid },
                type: "GET",
                success: function(data) {
                    $.each(data, function(key, value ) {
                        chatManager.DisplayPost(value);
                    });
                },
                error: function() {

                }
            });
        },
        SendPost: function(roomid) {
            let textArea = $(`#myTabcontainer .tab-pane[room-id="${roomid}"] textarea`); 
            let message = textArea.val();

            $.ajax({
                url: "/Home/PublishPost",
                data: { roomId: roomid, message: message },
                type: "POST",
                success: function(data) {
                },
                error: function() {
                }
            });

            textArea.val('');
            textArea.text('');
        },
        DisplayPost: function(post) {            
            let target = $(`#myTabcontainer .tab-pane[room-id="${post.roomId}"] .messages`);

            target.append(
                `<span><b>[${post.timeStampStr}] ${post.userName}</b>: ${post.message}</span><br/>`
            );

            target.scrollTop(target.height());
        },
        ConfigureConnection: function() {

            chatManager.connection = new signalR.HubConnectionBuilder().withUrl("@ViewBag.hubService").build();

            chatManager.connection.start();

            chatManager.connection.on("ReceiveMessage", (roomId, user, message, timestamp) => {
                chatManager.DisplayPost({ roomId: roomId, userName: user, message: message, timeStampStr: timestamp });
            });
        },
        ConnectRoom: function(roomid) {
            chatManager.connection.invoke("AddToRoom", roomid);
        },
        DisconnectRoom: function(roomid) {
            chatManager.connection.invoke("RemoveFromRoom", roomid);
        }
    }
</script>
<script type="text/javascript">

    chatManager.ConfigureConnection();

</script>